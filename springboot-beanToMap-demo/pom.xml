<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--<parent>-->
    <!--<artifactId>simpledemo</artifactId>-->
    <!--<artifactId>spring-boot-starter-parent</artifactId>-->
    <!--<groupId>gdpu.karanda</groupId>-->
    <!--<version>1.0-SNAPSHOT</version>-->
    <!--</parent>-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>springboot-benaToMap-demo</artifactId>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <spring-boot.version>2.1.1.RELEASE</spring-boot.version>
    </properties>
    <!--版本管理-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!--从SpringBoot导入依赖关系管理-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--springboot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!-- oracle -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>10.2.0.1.0</version>
        </dependency>
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--mybatis 功能未知-->
        <!--<dependency>-->
        <!--<groupId>com.baomidou</groupId>-->
        <!--<artifactId>mybatis-plus-boot-starter</artifactId>-->
        <!--<version>3.0.7.1</version>-->
        <!--<exclusions>-->
        <!--<exclusion>-->
        <!--<groupId>com.baomidou</groupId>-->
        <!--<artifactId>mybatis-plus-generator</artifactId>-->
        <!--</exclusion>-->
        <!--</exclusions>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>cmsz</id>-->
    <!--<name>CMSZ dev</name>-->
    <!--<url>http://192.168.59.185:8081/nexus/content/groups/public/</url>-->
    <!--<releases>-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--<snapshots>-->
    <!--<enabled>true</enabled>-->
    <!--&lt;!&ndash;由于SNAPSHOT版本不稳定，需要持续发布，在不改变版本的情况下，需要持续获取最新的依赖jar，所以根据需求配置获取频率。 配置对于SNAPSHOT版本向远程仓库中查找的频率,频率共有四种，分别是always、daily、interval、never,默认daily。-->
    <!--当本地仓库中存在需要的依赖项目时，always是每次都去远程仓库查看是否有更新，daily是只在第一次的时候查看是否有更新，当天的其它时候则不会查看；-->
    <!--interval允许设置一个分钟为单位的间隔时间(用法：interval:XX(XX是间隔分钟数))，在这个间隔时间内只会去远程仓库中查找一次，never是不会去远程仓库中查找 &ndash;&gt;-->
    <!--<updatePolicy>always</updatePolicy>-->
    <!--</snapshots>-->
    <!--</repository>-->
    <!--</repositories>-->
    <!--&lt;!&ndash; maven插件 &ndash;&gt;-->
    <!--<build>-->
    <!--<plugins>-->
    <!--<plugin>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--<version>2.1.1.RELEASE</version>-->
    <!--</plugin>-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-compiler-plugin</artifactId>-->
    <!--<configuration>-->
    <!--<source>8</source>-->
    <!--<target>8</target>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--</plugins>-->
    <!--<resources>-->
    <!--<resource>-->
    <!--<directory>src/main/java</directory>-->
    <!--<includes>-->
    <!--<include>**/*.xml</include>-->
    <!--<include>**/*.properties</include>-->
    <!--</includes>-->
    <!--<filtering>true</filtering>-->
    <!--</resource>-->
    <!--<resource>-->
    <!--<directory>src/main/resources</directory>-->
    <!--<includes>-->
    <!--<include>**/*.xml</include>-->
    <!--<include>**/*.properties</include>-->
    <!--</includes>-->
    <!--<filtering>true</filtering>-->
    <!--</resource>-->
    <!--</resources>-->
    <!--</build>-->
</project>